{"version":3,"file":"index.modern.js","sources":["../src/context/addContext.tsx","../src/api.ts","../src/components/Add.tsx","../src/context/AddReducer.ts","../src/context/AddProvider.tsx"],"sourcesContent":["import { createContext } from 'react'\nimport { AdvertiserAddMapping } from '../types'\n\ninterface ContextType {\n  registerAdd: (id: string) => void\n  addConversion: (id: string) => void\n  advertisers: Array<AdvertiserAddMapping>\n}\n\nconst initialContext: ContextType = {\n  advertisers: [],\n  registerAdd: () => {},\n  addConversion: () => {}\n}\n\nconst AppContext = createContext(initialContext)\n\nexport default AppContext\n","import {AddItem } from './types'\n\n\nlet API_URL='';\nexport const getAdvertisers =  async (\n  count: number,\n  exclude: any,\n  clientId: string\n): Promise<string []> => {\n  console.log('exclude',exclude)\n  const response = await fetch(`${API_URL}/advertisers?count=${count}&clientId=${clientId}`)\n  return response.json()\n}\nexport const getAdvertise = async (\n  advertiser: string,\n  size: string\n): Promise<AddItem> => {\n  const response = await fetch(`${API_URL}/advertisers/${advertiser}/advertise?size=${size}&random=true`)\n  return response.json()\n}\n\nexport const recordConversions = async (uid: string, clientId: string): Promise<boolean> => {\n  const response = await fetch(`${API_URL}/advertise/${uid}/conversion`,{\n    method: 'POST',\n    body: JSON.stringify({clientId})\n  })\n  return response.ok;\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport AppContext from '../context/addContext'\nimport styles from './styles.module.css'\nimport { AddItem, AdvertiserAddMapping } from '../types'\nimport { getAdvertise } from '../api'\n\ntype AddSize = 'banner' | 'square' | 'learderboard'\n\ninterface AddProps {\n  size: AddSize,\n  addKey?: string\n}\nconst ADD_DIMENSION = {\n  banner: {\n    width: 468,\n    height: 60\n  }\n}\n\nconst Add: React.FC<AddProps> = (props: AddProps) => {\n  const { registerAdd, advertisers, addConversion } = useContext(AppContext)\n  const [key, setKey] = useState<string>()\n  const [imageLoaded, setImageLoaded] = useState<boolean>(false)\n  const [addInfo, setAddInfo] = useState<AddItem>()\n  const { size } = props\n  const dimension = ADD_DIMENSION[size]\n\n  const onAddClicked = () => {\n    addInfo && addConversion(addInfo.uid)\n  }\n\n  const fetchAdvertise = async (advertiserAddMapping: AdvertiserAddMapping) => {\n    try {\n      const { advertiser } = advertiserAddMapping\n      const response: AddItem = await getAdvertise(advertiser, size)\n      setAddInfo(response)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  useEffect(() => {\n    const key = props.addKey || `${Math.floor(Math.random() * 1000000)}`\n    registerAdd(key)\n    setKey(key)\n  }, [])\n\n  useEffect(() => {\n    const advertiser = advertisers.find((a) => a.addKey === key)\n    if (advertiser && !addInfo) {\n      fetchAdvertise(advertiser)\n    }\n  }, [advertisers, key])\n\n  return (\n    <a\n      className={styles.add}\n      style={{\n        width: dimension.width,\n        height: dimension.height,\n        display: 'inline-block'\n      }}\n      id={key}\n      href={addInfo && addInfo.url}\n      target='_blank'\n      rel='noreferrer'\n      onClick={onAddClicked}\n      data-test-id=\"add-block\"\n    >\n      {imageLoaded && <span data-test-id=\"add-block-placeholder\" className={styles.add_label}>Ad</span>}\n      {!imageLoaded ? (\n        <img\n         data-test-id=\"add-block-dummy-image\"\n         decoding=\"async\"\n          src={`https://via.placeholder.com/${dimension.width}x${dimension.height}.png?text=AD`}\n        />\n      ) : null}\n      {addInfo && (\n        <img\n          decoding=\"async\"\n          onLoad={() => setImageLoaded(true)}\n          className={styles.add_img}\n          src={addInfo.img}\n          alt={addInfo.title}\n          style={{ visibility: imageLoaded ? 'visible' : 'hidden' }}\n          data-test-id=\"add-block-img\"\n        />\n      )}\n    </a>\n  )\n}\n\nexport default Add\n","export default (state: any, action: any) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case 'GET_ADVERTISER_REQUEST':\n      return {\n        ...state,\n        addSlots: [...state.addSlots, payload]\n      }\n    case 'SET_ADVERTISERS':\n      return {\n        ...state,\n        advertisers: [...state.advertisers, ...action.payload],\n        addSlots: []\n      }\n    default:\n      return state\n  }\n}\n","import React, { useEffect, useReducer } from 'react'\nimport AppReducer from './AddReducer'\nimport AppContext from './addContext'\nimport { getAdvertisers, recordConversions } from '../api'\nimport { AdvertiserAddMapping } from '../types'\n\ntype addProviderProps = {\n  clientId: string\n}\n\nconst initialState = {\n  advertisers: [],\n  addSlots: []\n}\nconst AddProvider: React.FC<addProviderProps> = ({ clientId, children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState)\n  const { advertisers, addSlots } = state\n  const registerAdd = (key: string) => {\n    dispatch({\n      type: 'GET_ADVERTISER_REQUEST',\n      payload: key\n    })\n  }\n\n  const addConversion = async (uid: string) => {\n    try {\n      await recordConversions(uid,clientId)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  const fetchAdvisers = async (addSlots: string[]) => {\n    try {\n      const availableAdvertisers: string [] = await getAdvertisers(\n        addSlots.length,\n        advertisers,\n        clientId\n      )\n      const advertisersMapToAdd : AdvertiserAddMapping [] = \n      availableAdvertisers.map((a, index) => {\n        return {\n          advertiser: a,\n          addKey: addSlots[index]\n        }\n      })\n      dispatch({\n        type: 'SET_ADVERTISERS',\n        payload: advertisersMapToAdd\n      })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    if (!clientId) {\n      console.error('clientId is required.')\n    }\n  },[])\n\n  useEffect(() => {\n    if (clientId && addSlots.length > 0) {\n      fetchAdvisers(addSlots)\n    }\n  }, [addSlots,clientId])\n  return (\n    <div>\n      <AppContext.Provider\n        value={{\n          advertisers: advertisers,\n          registerAdd: registerAdd,\n          addConversion: addConversion\n        }}\n      >\n        {children}\n      </AppContext.Provider>\n    </div>\n  )\n}\nexport default AddProvider\n"],"names":["initialContext","advertisers","registerAdd","addConversion","AppContext","createContext","getAdvertisers","count","exclude","clientId","console","log","response","fetch","json","getAdvertise","advertiser","size","recordConversions","uid","method","body","JSON","stringify","ok","ADD_DIMENSION","banner","width","height","Add","props","useContext","key","setKey","useState","imageLoaded","setImageLoaded","addInfo","setAddInfo","dimension","onAddClicked","fetchAdvertise","advertiserAddMapping","e","error","useEffect","addKey","Math","floor","random","find","a","React","className","styles","add","style","display","id","href","url","target","rel","onClick","add_label","decoding","src","onLoad","add_img","img","alt","title","visibility","state","action","type","payload","addSlots","initialState","AddProvider","children","dispatch","useReducer","AppReducer","err","fetchAdvisers","availableAdvertisers","length","advertisersMapToAdd","map","index","Provider","value"],"mappings":"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"}